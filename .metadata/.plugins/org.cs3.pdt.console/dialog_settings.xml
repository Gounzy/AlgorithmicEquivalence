<?xml version="1.0" encoding="UTF-8"?>
<section name="Workbench">
	<section name="history">
		<list key="rezrez">
			<item value="compare_generalizations."/>
			<item value="compare_generalizations."/>
			<item value="compare_generalizations."/>
			<item value="compare_generalizations."/>
			<item value="compare_generalizations."/>
			<item value="renaming_apart(h(G,G,E), h(J,I,I), Phi)."/>
			<item value="renaming_apart(h(&apos;$VAR&apos;(1),&apos;$VAR&apos;(2),&apos;$VAR&apos;(2), h(&apos;$VAR&apos;(4),&apos;$VAR&apos;(3),&apos;$VAR&apos;(3), Phi)."/>
			<item value="renaming_apart(h(&apos;$VAR&apos;(1),&apos;$VAR&apos;(2),&apos;$VAR&apos;(2)), h(&apos;$VAR&apos;(4),&apos;$VAR&apos;(3),&apos;$VAR&apos;(3), Phi)."/>
			<item value="renaming_apart(h(&apos;$VAR&apos;(1),&apos;$VAR&apos;(2),&apos;$VAR&apos;(2)), h(&apos;$VAR&apos;(4),&apos;$VAR&apos;(3),&apos;$VAR&apos;(3)), Phi)."/>
			<item value="renaming_from([&apos;$VAR&apos;(1),&apos;$VAR&apos;(2)], [&apos;$VAR&apos;(4),&apos;$VAR&apos;(3)], Phi)."/>
			<item value="k_swap_poly(20, [1-4], X)."/>
			<item value="k_swap_poly(20, [1-4], [1-3])."/>
			<item value="k_swap_poly(20, [1-4], [2-3])."/>
			<item value="k_swap_poly(20, [1-4], [2-3, 5-10])."/>
			<item value="k_swap_poly(0, [1-4], [2-3, 5-10])."/>
			<item value="k_swap_poly(1, [1-4], [2-3, 5-10])."/>
			<item value="k_swap_poly(2, [1-4], [2-3, 5-10])."/>
			<item value="k_swap_poly(3, [1-4], [2-3, 5-10])."/>
			<item value="k_swap_poly(10, [1-4], [2-3, 5-10])."/>
			<item value="k_swap_poly(10, [1-4], [2-3, 5-10])."/>
			<item value="compare_generalizations."/>
		</list>
		<list key="Default Process">
			<item value="pdt_reload"/>
			<item value="."/>
			<item value="C:/DocumentsUnamur/GitHub/AlgorithmicEquivalence/src"/>
			<item value="C:/DocumentsUnamur/GitHub/AlgorithmicEquivalence/src."/>
			<item value="exit"/>
			<item value="generalize(1)."/>
			<item value="listing(random_member)."/>
			<item value="random(10)."/>
			<item value="N is random(10)."/>
			<item value="N is random(5,10)."/>
			<item value=" pdt_reload:pdt_reload(&apos;C:/DocumentsUnamur/GitHub/AlgorithmicEquivalence/src/main.pl&apos;)."/>
			<item value=" pdt_reload:pdt_reload(&apos;C:/DocumentsUnamur/GitHub/AlgorithmicEquivalence/src/main.pl&apos;)."/>
			<item value="working_directory(_, &apos;C:/DocumentsUnamur/GitHub/AlgorithmicEquivalence/src&apos;)."/>
			<item value="generate_clp_clauses(K). "/>
			<item value="generate_CLP_clauses(K). "/>
			<item value=" pdt_reload:pdt_reload(&apos;C:/DocumentsUnamur/GitHub/AlgorithmicEquivalence/src/main.pl&apos;)."/>
			<item value="generate_CLP_clauses(K). "/>
			<item value=" pdt_reload:pdt_reload(&apos;C:/DocumentsUnamur/GitHub/AlgorithmicEquivalence/src/main.pl&apos;)."/>
			<item value="generate_CLP_clauses(K). "/>
			<item value=" pdt_reload:pdt_reload(&apos;C:/DocumentsUnamur/GitHub/AlgorithmicEquivalence/src/main.pl&apos;)."/>
			<item value=" pdt_reload:pdt_reload(&apos;C:/DocumentsUnamur/GitHub/AlgorithmicEquivalence/src/main.pl&apos;)."/>
			<item value="generate_CLP_clauses(K). "/>
			<item value=" pdt_reload:pdt_reload(&apos;C:/DocumentsUnamur/GitHub/AlgorithmicEquivalence/src/main.pl&apos;)."/>
			<item value="generate_CLP_clauses(K). "/>
			<item value=" pdt_reload:pdt_reload(&apos;C:/DocumentsUnamur/GitHub/AlgorithmicEquivalence/src/main.pl&apos;)."/>
			<item value="generate_CLP_clauses(K). "/>
			<item value=" pdt_reload:pdt_reload(&apos;C:/DocumentsUnamur/GitHub/AlgorithmicEquivalence/src/db.pl&apos;)."/>
			<item value="different_vars(X)."/>
			<item value=" pdt_reload:pdt_reload(&apos;C:/DocumentsUnamur/GitHub/AlgorithmicEquivalence/src/main.pl&apos;)."/>
			<item value="generate_CLP_clauses(K). "/>
			<item value=" pdt_reload:pdt_reload(&apos;C:/DocumentsUnamur/GitHub/AlgorithmicEquivalence/src/main.pl&apos;)."/>
			<item value="generate_CLP_clauses(K). "/>
			<item value="generate_CLP_clauses(K). "/>
			<item value=" pdt_reload:pdt_reload(&apos;C:/DocumentsUnamur/GitHub/AlgorithmicEquivalence/src/main.pl&apos;)."/>
			<item value="generate_CLP_clauses(K). "/>
			<item value="generate_CLP_clauses(K). "/>
			<item value="generate_CLP_clauses(K). "/>
			<item value=" pdt_reload:pdt_reload(&apos;C:/DocumentsUnamur/GitHub/AlgorithmicEquivalence/src/main.pl&apos;).&#x0D;&#x0A;   "/>
			<item value="generalize_random_clauses(2)."/>
			<item value="generalize_random_clauses(2)."/>
			<item value="compare_generalizations(2)."/>
			<item value="compare_generalizations(2)."/>
			<item value="compare_generalizations(2)."/>
			<item value="compare_generalizations(2)."/>
			<item value="compare_generalizations(2)."/>
			<item value="compare_generalizations."/>
			<item value="compare_generalizations."/>
			<item value="compare_generalizations."/>
			<item value="compare_generalizations."/>
			<item value="compare_generalizations."/>
			<item value="compare_generalizations."/>
			<item value="compare_generalizations."/>
			<item value="compare_generalizations."/>
			<item value="compare_generalizations."/>
			<item value="compare_generalizations."/>
			<item value="compare_generalizations."/>
			<item value="compare_generalizations."/>
			<item value="compare_generalizations."/>
			<item value="compare_generalizations."/>
			<item value="compare_generalizations."/>
			<item value="compare_generalizations."/>
			<item value="compare_generalizations."/>
			<item value="renaming_from([1,2,3],[10,11,12], Rho)."/>
			<item value="compare_generalizations."/>
			<item value="compare_generalizations."/>
			<item value="compare_generalizations."/>
			<item value="renaming_from([1,2,3], [5,6])."/>
			<item value="renaming_from([1,2,3], [5,6])."/>
			<item value="renaming_from([1,2,3], [5,6], Rho)."/>
			<item value="compare_generalizations."/>
			<item value="generalize_for_all_k_up_to(10, [h(&apos;$VAR&apos;(1), &apos;$VAR&apos;(2)), f(&apos;$VAR&apos;(1), &apos;$VAR&apos;(2), &apos;$VAR&apos;(3)), m(&apos;$VAR&apos;(1), &apos;$VAR&apos;(3))] , [h(&apos;$VAR&apos;(10), &apos;$VAR&apos;(9)), f(&apos;$VAR&apos;(7), &apos;$VAR&apos;(8), &apos;$VAR&apos;(9)), m(&apos;$VAR&apos;(7), &apos;$VAR&apos;(9))], [], 0):-"/>
			<item value="."/>
			<item value="generalize_for_all_k_up_to(10, [h(&apos;$VAR&apos;(1), &apos;$VAR&apos;(2)), f(&apos;$VAR&apos;(1), &apos;$VAR&apos;(2), &apos;$VAR&apos;(3)), m(&apos;$VAR&apos;(1), &apos;$VAR&apos;(3))] , [h(&apos;$VAR&apos;(10), &apos;$VAR&apos;(9)), f(&apos;$VAR&apos;(7), &apos;$VAR&apos;(8), &apos;$VAR&apos;(9)), m(&apos;$VAR&apos;(7), &apos;$VAR&apos;(9))], [], 0)."/>
			<item value="build_matrices([h(&apos;$VAR&apos;(1), &apos;$VAR&apos;(2)), f(&apos;$VAR&apos;(1), &apos;$VAR&apos;(2), &apos;$VAR&apos;(3)), m(&apos;$VAR&apos;(1), &apos;$VAR&apos;(3))] , [h(&apos;$VAR&apos;(10), &apos;$VAR&apos;(9)), f(&apos;$VAR&apos;(7), &apos;$VAR&apos;(8), &apos;$VAR&apos;(9)), m(&apos;$VAR&apos;(7), &apos;$VAR&apos;(9))], M, [h(&apos;$VAR&apos;(10), &apos;$VAR&apos;(9)), f(&apos;$VAR&apos;(7), &apos;$VAR&apos;(8), &apos;$VAR&apos;(9)), m(&apos;$VAR&apos;(7), &apos;$VAR&apos;(9))], 0, 0)."/>
			<item value="build_matrices([f(&apos;$VAR&apos;(1), &apos;$VAR&apos;(2), &apos;$VAR&apos;(3)), h(&apos;$VAR&apos;(1), &apos;$VAR&apos;(2)), m(&apos;$VAR&apos;(1), &apos;$VAR&apos;(3))] , [f(&apos;$VAR&apos;(7), &apos;$VAR&apos;(8), &apos;$VAR&apos;(9)), h(&apos;$VAR&apos;(10), &apos;$VAR&apos;(9)),  m(&apos;$VAR&apos;(7), &apos;$VAR&apos;(9))], M, [f(&apos;$VAR&apos;(7), &apos;$VAR&apos;(8), &apos;$VAR&apos;(9)), h(&apos;$VAR&apos;(10), &apos;$VAR&apos;(9)), m(&apos;$VAR&apos;(7), &apos;$VAR&apos;(9))], 0, 0)."/>
			<item value="build_matrices([f(&apos;$VAR&apos;(23), &apos;$VAR&apos;(24), &apos;$VAR&apos;(25)), h(&apos;$VAR&apos;(23), &apos;$VAR&apos;(24)), m(&apos;$VAR&apos;(23), &apos;$VAR&apos;(25))] , [f(&apos;$VAR&apos;(7), &apos;$VAR&apos;(8), &apos;$VAR&apos;(9)), h(&apos;$VAR&apos;(10), &apos;$VAR&apos;(9)),  m(&apos;$VAR&apos;(7), &apos;$VAR&apos;(9))], M, [f(&apos;$VAR&apos;(7), &apos;$VAR&apos;(8), &apos;$VAR&apos;(9)), h(&apos;$VAR&apos;(10), &apos;$VAR&apos;(9)), m(&apos;$VAR&apos;(7), &apos;$VAR&apos;(9))], 0, 0)."/>
			<item value="build_matrices([f(&apos;$VAR&apos;(23), &apos;$VAR&apos;(24), &apos;$VAR&apos;(25)), h(&apos;$VAR&apos;(23), &apos;$VAR&apos;(24)), m(&apos;$VAR&apos;(23), &apos;$VAR&apos;(25))] , [f(&apos;$VAR&apos;(0), &apos;$VAR&apos;(1), &apos;$VAR&apos;(2)), h(&apos;$VAR&apos;(3), &apos;$VAR&apos;(2)),  m(&apos;$VAR&apos;(0), &apos;$VAR&apos;(2))], M, [f(&apos;$VAR&apos;(0), &apos;$VAR&apos;(1), &apos;$VAR&apos;(2)), h(&apos;$VAR&apos;(3), &apos;$VAR&apos;(2)),  m(&apos;$VAR&apos;(0), &apos;$VAR&apos;(2))], 0, 0)."/>
			<item value="test_gen."/>
			<item value="test_gen."/>
			<item value="test_gen."/>
			<item value="test_gen."/>
			<item value="build_matrices([f(&apos;$VAR&apos;(23), &apos;$VAR&apos;(24), &apos;$VAR&apos;(25)), h(&apos;$VAR&apos;(23), &apos;$VAR&apos;(24)), m(&apos;$VAR&apos;(23), &apos;$VAR&apos;(25))] , [f(&apos;$VAR&apos;(7), &apos;$VAR&apos;(8), &apos;$VAR&apos;(9)), h(&apos;$VAR&apos;(10), &apos;$VAR&apos;(9)),  m(&apos;$VAR&apos;(7), &apos;$VAR&apos;(9))], M, [f(&apos;$VAR&apos;(7), &apos;$VAR&apos;(8), &apos;$VAR&apos;(9)), h(&apos;$VAR&apos;(10), &apos;$VAR&apos;(9)), m(&apos;$VAR&apos;(7), &apos;$VAR&apos;(9))], 0, 0)."/>
			<item value="build_matrices([f(&apos;$VAR&apos;(23), &apos;$VAR&apos;(24), &apos;$VAR&apos;(25)), h(&apos;$VAR&apos;(23), &apos;$VAR&apos;(24)), m(&apos;$VAR&apos;(23), &apos;$VAR&apos;(25))] , [f(&apos;$VAR&apos;(7), &apos;$VAR&apos;(8), &apos;$VAR&apos;(9)), h(&apos;$VAR&apos;(10), &apos;$VAR&apos;(9)),  m(&apos;$VAR&apos;(7), &apos;$VAR&apos;(9))], M, [f(&apos;$VAR&apos;(7), &apos;$VAR&apos;(8), &apos;$VAR&apos;(9)), h(&apos;$VAR&apos;(10), &apos;$VAR&apos;(9)), m(&apos;$VAR&apos;(7), &apos;$VAR&apos;(9))], 0, 0)."/>
			<item value="build_matrices([f(&apos;$VAR&apos;(23), &apos;$VAR&apos;(24), &apos;$VAR&apos;(25)), h(&apos;$VAR&apos;(23), &apos;$VAR&apos;(24)), m(&apos;$VAR&apos;(23), &apos;$VAR&apos;(25))] , [f(&apos;$VAR&apos;(7), &apos;$VAR&apos;(8), &apos;$VAR&apos;(9)), h(&apos;$VAR&apos;(10), &apos;$VAR&apos;(9)),  m(&apos;$VAR&apos;(7), &apos;$VAR&apos;(9))], M, [f(&apos;$VAR&apos;(7), &apos;$VAR&apos;(8), &apos;$VAR&apos;(9)), h(&apos;$VAR&apos;(10), &apos;$VAR&apos;(9)), m(&apos;$VAR&apos;(7), &apos;$VAR&apos;(9))], 0, 0), trace, take_up_to(10, 10, f(&apos;$VAR&apos;(23), &apos;$VAR&apos;(24), &apos;$VAR&apos;(25)), h(&apos;$VAR&apos;(23), &apos;$VAR&apos;(24)), m(&apos;$VAR&apos;(23), &apos;$VAR&apos;(25))], M, Out)."/>
			<item value="build_matrices([f(&apos;$VAR&apos;(23), &apos;$VAR&apos;(24), &apos;$VAR&apos;(25)), h(&apos;$VAR&apos;(23), &apos;$VAR&apos;(24)), m(&apos;$VAR&apos;(23), &apos;$VAR&apos;(25))] , [f(&apos;$VAR&apos;(7), &apos;$VAR&apos;(8), &apos;$VAR&apos;(9)), h(&apos;$VAR&apos;(10), &apos;$VAR&apos;(9)),  m(&apos;$VAR&apos;(7), &apos;$VAR&apos;(9))], M, [f(&apos;$VAR&apos;(7), &apos;$VAR&apos;(8), &apos;$VAR&apos;(9)), h(&apos;$VAR&apos;(10), &apos;$VAR&apos;(9)), m(&apos;$VAR&apos;(7), &apos;$VAR&apos;(9))], 0, 0), trace, take_up_to(10, 10, [f(&apos;$VAR&apos;(23), &apos;$VAR&apos;(24), &apos;$VAR&apos;(25)), h(&apos;$VAR&apos;(23), &apos;$VAR&apos;(24)), m(&apos;$VAR&apos;(23), &apos;$VAR&apos;(25))], M, Out)."/>
			<item value="notract."/>
			<item value="build_matrices([f(&apos;$VAR&apos;(23), &apos;$VAR&apos;(24), &apos;$VAR&apos;(25)), h(&apos;$VAR&apos;(23), &apos;$VAR&apos;(24)), m(&apos;$VAR&apos;(23), &apos;$VAR&apos;(25))] , [f(&apos;$VAR&apos;(7), &apos;$VAR&apos;(8), &apos;$VAR&apos;(9)), h(&apos;$VAR&apos;(10), &apos;$VAR&apos;(9)),  m(&apos;$VAR&apos;(7), &apos;$VAR&apos;(9))], M, [f(&apos;$VAR&apos;(7), &apos;$VAR&apos;(8), &apos;$VAR&apos;(9)), h(&apos;$VAR&apos;(10), &apos;$VAR&apos;(9)), m(&apos;$VAR&apos;(7), &apos;$VAR&apos;(9))], 0, 0), take_up_to(10, 10, f(&apos;$VAR&apos;(23), &apos;$VAR&apos;(24), &apos;$VAR&apos;(25)), h(&apos;$VAR&apos;(23), &apos;$VAR&apos;(24)), m(&apos;$VAR&apos;(23), &apos;$VAR&apos;(25))], M, Out)."/>
			<item value="build_matrices([f(&apos;$VAR&apos;(23), &apos;$VAR&apos;(24), &apos;$VAR&apos;(25)), h(&apos;$VAR&apos;(23), &apos;$VAR&apos;(24)), m(&apos;$VAR&apos;(23), &apos;$VAR&apos;(25))] , [f(&apos;$VAR&apos;(7), &apos;$VAR&apos;(8), &apos;$VAR&apos;(9)), h(&apos;$VAR&apos;(10), &apos;$VAR&apos;(9)),  m(&apos;$VAR&apos;(7), &apos;$VAR&apos;(9))], M, [f(&apos;$VAR&apos;(7), &apos;$VAR&apos;(8), &apos;$VAR&apos;(9)), h(&apos;$VAR&apos;(10), &apos;$VAR&apos;(9)), m(&apos;$VAR&apos;(7), &apos;$VAR&apos;(9))], 0, 0), take_up_to(10, 10, [f(&apos;$VAR&apos;(23), &apos;$VAR&apos;(24), &apos;$VAR&apos;(25)), h(&apos;$VAR&apos;(23), &apos;$VAR&apos;(24)), m(&apos;$VAR&apos;(23), &apos;$VAR&apos;(25))], M, Out)."/>
			<item value="build_matrices([f(&apos;$VAR&apos;(23), &apos;$VAR&apos;(24), &apos;$VAR&apos;(25)), h(&apos;$VAR&apos;(23), &apos;$VAR&apos;(24)), m(&apos;$VAR&apos;(23), &apos;$VAR&apos;(25))] , [f(&apos;$VAR&apos;(7), &apos;$VAR&apos;(8), &apos;$VAR&apos;(9)), h(&apos;$VAR&apos;(10), &apos;$VAR&apos;(9)),  m(&apos;$VAR&apos;(7), &apos;$VAR&apos;(9))], M, [f(&apos;$VAR&apos;(7), &apos;$VAR&apos;(8), &apos;$VAR&apos;(9)), h(&apos;$VAR&apos;(10), &apos;$VAR&apos;(9)), m(&apos;$VAR&apos;(7), &apos;$VAR&apos;(9))], 0, 0), take_up_to(10, 10, [f(&apos;$VAR&apos;(23), &apos;$VAR&apos;(24), &apos;$VAR&apos;(25)), h(&apos;$VAR&apos;(23), &apos;$VAR&apos;(24)), m(&apos;$VAR&apos;(23), &apos;$VAR&apos;(25))], M, Out)."/>
			<item value="build_matrices([f(&apos;$VAR&apos;(23), &apos;$VAR&apos;(24), &apos;$VAR&apos;(25)), h(&apos;$VAR&apos;(23), &apos;$VAR&apos;(24)), m(&apos;$VAR&apos;(23), &apos;$VAR&apos;(25))] , [f(&apos;$VAR&apos;(7), &apos;$VAR&apos;(8), &apos;$VAR&apos;(9)), h(&apos;$VAR&apos;(10), &apos;$VAR&apos;(9)),  m(&apos;$VAR&apos;(7), &apos;$VAR&apos;(9))], M, [f(&apos;$VAR&apos;(7), &apos;$VAR&apos;(8), &apos;$VAR&apos;(9)), h(&apos;$VAR&apos;(10), &apos;$VAR&apos;(9)), m(&apos;$VAR&apos;(7), &apos;$VAR&apos;(9))], 0, 0), trace, take_up_to(10, 10, [f(&apos;$VAR&apos;(23), &apos;$VAR&apos;(24), &apos;$VAR&apos;(25)), h(&apos;$VAR&apos;(23), &apos;$VAR&apos;(24)), m(&apos;$VAR&apos;(23), &apos;$VAR&apos;(25))], M, Out)."/>
			<item value="build_matrices([f(&apos;$VAR&apos;(23), &apos;$VAR&apos;(24), &apos;$VAR&apos;(25)), h(&apos;$VAR&apos;(23), &apos;$VAR&apos;(24)), m(&apos;$VAR&apos;(23), &apos;$VAR&apos;(25))] , [f(&apos;$VAR&apos;(7), &apos;$VAR&apos;(8), &apos;$VAR&apos;(9)), h(&apos;$VAR&apos;(10), &apos;$VAR&apos;(9)),  m(&apos;$VAR&apos;(7), &apos;$VAR&apos;(9))], M, [f(&apos;$VAR&apos;(7), &apos;$VAR&apos;(8), &apos;$VAR&apos;(9)), h(&apos;$VAR&apos;(10), &apos;$VAR&apos;(9)), m(&apos;$VAR&apos;(7), &apos;$VAR&apos;(9))], 0, 0), take_up_to(1, 1, [f(&apos;$VAR&apos;(23), &apos;$VAR&apos;(24), &apos;$VAR&apos;(25)), h(&apos;$VAR&apos;(23), &apos;$VAR&apos;(24)), m(&apos;$VAR&apos;(23), &apos;$VAR&apos;(25))], M, Out)."/>
			<item value="build_matrices([f(&apos;$VAR&apos;(23), &apos;$VAR&apos;(24), &apos;$VAR&apos;(25)), h(&apos;$VAR&apos;(23), &apos;$VAR&apos;(24)), m(&apos;$VAR&apos;(23), &apos;$VAR&apos;(25))] , [f(&apos;$VAR&apos;(7), &apos;$VAR&apos;(8), &apos;$VAR&apos;(9)), h(&apos;$VAR&apos;(10), &apos;$VAR&apos;(9)),  m(&apos;$VAR&apos;(7), &apos;$VAR&apos;(9))], M, [f(&apos;$VAR&apos;(7), &apos;$VAR&apos;(8), &apos;$VAR&apos;(9)), h(&apos;$VAR&apos;(10), &apos;$VAR&apos;(9)), m(&apos;$VAR&apos;(7), &apos;$VAR&apos;(9))], 0, 0), take_up_to(1, 1, [f(&apos;$VAR&apos;(23), &apos;$VAR&apos;(24), &apos;$VAR&apos;(25)), h(&apos;$VAR&apos;(23), &apos;$VAR&apos;(24)), m(&apos;$VAR&apos;(23), &apos;$VAR&apos;(25))], M, Out)."/>
			<item value="build_matrices([f(&apos;$VAR&apos;(23), &apos;$VAR&apos;(24), &apos;$VAR&apos;(25)), h(&apos;$VAR&apos;(23), &apos;$VAR&apos;(24)), m(&apos;$VAR&apos;(23), &apos;$VAR&apos;(25))] , [f(&apos;$VAR&apos;(7), &apos;$VAR&apos;(8), &apos;$VAR&apos;(9)), h(&apos;$VAR&apos;(10), &apos;$VAR&apos;(9)),  m(&apos;$VAR&apos;(7), &apos;$VAR&apos;(9))], M, [f(&apos;$VAR&apos;(7), &apos;$VAR&apos;(8), &apos;$VAR&apos;(9)), h(&apos;$VAR&apos;(10), &apos;$VAR&apos;(9)), m(&apos;$VAR&apos;(7), &apos;$VAR&apos;(9))], 0, 0), take_up_to(1, 1, [f(&apos;$VAR&apos;(23), &apos;$VAR&apos;(24), &apos;$VAR&apos;(25)), h(&apos;$VAR&apos;(23), &apos;$VAR&apos;(24)), m(&apos;$VAR&apos;(23), &apos;$VAR&apos;(25))], M, Out)."/>
			<item value="build_matrices([f(&apos;$VAR&apos;(23), &apos;$VAR&apos;(24), &apos;$VAR&apos;(25)), h(&apos;$VAR&apos;(23), &apos;$VAR&apos;(24)), m(&apos;$VAR&apos;(23), &apos;$VAR&apos;(25))] , [f(&apos;$VAR&apos;(7), &apos;$VAR&apos;(8), &apos;$VAR&apos;(9)), h(&apos;$VAR&apos;(10), &apos;$VAR&apos;(9)),  m(&apos;$VAR&apos;(7), &apos;$VAR&apos;(9))], M, [f(&apos;$VAR&apos;(7), &apos;$VAR&apos;(8), &apos;$VAR&apos;(9)), h(&apos;$VAR&apos;(10), &apos;$VAR&apos;(9)), m(&apos;$VAR&apos;(7), &apos;$VAR&apos;(9))], 0, 0), take_up_to(1, 1, [f(&apos;$VAR&apos;(23), &apos;$VAR&apos;(24), &apos;$VAR&apos;(25)), h(&apos;$VAR&apos;(23), &apos;$VAR&apos;(24)), m(&apos;$VAR&apos;(23), &apos;$VAR&apos;(25))], M, Out)."/>
			<item value="build_matrices([f(&apos;$VAR&apos;(23), &apos;$VAR&apos;(24), &apos;$VAR&apos;(25)), h(&apos;$VAR&apos;(23), &apos;$VAR&apos;(24)), m(&apos;$VAR&apos;(23), &apos;$VAR&apos;(25))] , [f(&apos;$VAR&apos;(7), &apos;$VAR&apos;(8), &apos;$VAR&apos;(9)), h(&apos;$VAR&apos;(10), &apos;$VAR&apos;(9)),  m(&apos;$VAR&apos;(7), &apos;$VAR&apos;(9))], M, [f(&apos;$VAR&apos;(7), &apos;$VAR&apos;(8), &apos;$VAR&apos;(9)), h(&apos;$VAR&apos;(10), &apos;$VAR&apos;(9)), m(&apos;$VAR&apos;(7), &apos;$VAR&apos;(9))], 0, 0), take_up_to(1, 1, [f(&apos;$VAR&apos;(23), &apos;$VAR&apos;(24), &apos;$VAR&apos;(25)), h(&apos;$VAR&apos;(23), &apos;$VAR&apos;(24)), m(&apos;$VAR&apos;(23), &apos;$VAR&apos;(25))], M, Out)."/>
			<item value="build_matrices([f(&apos;$VAR&apos;(23), &apos;$VAR&apos;(24), &apos;$VAR&apos;(25)), h(&apos;$VAR&apos;(23), &apos;$VAR&apos;(24)), m(&apos;$VAR&apos;(23), &apos;$VAR&apos;(25))] , [f(&apos;$VAR&apos;(7), &apos;$VAR&apos;(8), &apos;$VAR&apos;(9)), h(&apos;$VAR&apos;(10), &apos;$VAR&apos;(9)),  m(&apos;$VAR&apos;(7), &apos;$VAR&apos;(9))], M, [f(&apos;$VAR&apos;(7), &apos;$VAR&apos;(8), &apos;$VAR&apos;(9)), h(&apos;$VAR&apos;(10), &apos;$VAR&apos;(9)), m(&apos;$VAR&apos;(7), &apos;$VAR&apos;(9))], 0, 0), take_up_to(1, 1, [f(&apos;$VAR&apos;(23), &apos;$VAR&apos;(24), &apos;$VAR&apos;(25)), h(&apos;$VAR&apos;(23), &apos;$VAR&apos;(24)), m(&apos;$VAR&apos;(23), &apos;$VAR&apos;(25))], M, Out)."/>
			<item value="test_gen."/>
			<item value="test_gen."/>
			<item value="enforce_atoms([g(&apos;$VAR&apos;(1))], [f(&apos;$VAR&apos;(2))], [g(&apos;$VAR&apos;(3)), f(&apos;$VAR&apos;(4))], [2-4], Rho)."/>
			<item value="enforce_atoms([g(&apos;$VAR&apos;(1))], [f(&apos;$VAR&apos;(1))], [g(&apos;$VAR&apos;(3)), f(&apos;$VAR&apos;(4))], [1-4], Rho)."/>
			<item value="enforce_atoms([g(&apos;$VAR&apos;(1))], [f(&apos;$VAR&apos;(1))], [g(&apos;$VAR&apos;(3)), f(&apos;$VAR&apos;(4))], [1-4], Rho)."/>
			<item value="trace, enforce_atoms([g(&apos;$VAR&apos;(1))], [f(&apos;$VAR&apos;(1))], [g(&apos;$VAR&apos;(3)), f(&apos;$VAR&apos;(4))], [1-4], Rho)."/>
			<item value="enforce_atoms([g(&apos;$VAR&apos;(1))], [f(&apos;$VAR&apos;(1))], [g(&apos;$VAR&apos;(3)), f(&apos;$VAR&apos;(4))], [1-4], Rho)"/>
			<item value="."/>
			<item value="test_gen."/>
			<item value="test_gen."/>
			<item value="test_gen."/>
			<item value="test_matrix."/>
			<item value="test_matrix."/>
			<item value="test_matrix."/>
			<item value="test_matrix."/>
			<item value="test_matrix."/>
			<item value="test_matrix."/>
			<item value="test_matrix."/>
			<item value="test_matrix."/>
			<item value="test_matrix."/>
			<item value="test_matrix."/>
			<item value="test_matrix."/>
			<item value="test_matrix."/>
			<item value="test_matrix."/>
			<item value="test_gen."/>
			<item value="compare_generalizations."/>
			<item value="compare_generalizations."/>
			<item value="compare_generalizations."/>
			<item value="compare_generalizations."/>
			<item value="compare_generalizations."/>
			<item value="compare_generalizations."/>
			<item value="compare_generalizations."/>
			<item value="compare_generalizations."/>
			<item value="3/4"/>
			<item value="."/>
			<item value="X is 3/4."/>
			<item value="compare_generalizations."/>
			<item value="compare_generalizations."/>
			<item value="compare_generalizations."/>
			<item value="compare_generalizations."/>
			<item value="compare_generalizations."/>
			<item value="compare_generalizations."/>
		</list>
	</section>
</section>
